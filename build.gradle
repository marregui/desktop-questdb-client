import java.text.SimpleDateFormat

plugins {
    id 'application'
    id 'net.nemerosa.versioning' version '2.15.0'
    // https://plugins.gradle.org/plugin/net.nemerosa.versioning
}

group = 'io.questdb.desktop'
version = '1.0.0'
description = 'Desktop user interface to QuestDB through the Postgres Wire Protocol.'

repositories {
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

dependencies {
    implementation 'org.questdb:questdb:7.3.2'
    implementation 'org.postgresql:postgresql:42.6.0'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.realityforge.org.jetbrains.annotations:org.jetbrains.annotations:1.7.0'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-commons:1.8.2'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'org.mockito:mockito-core:4.3.1'
}

application {
    mainClass = 'io.questdb.desktop.Main'
    applicationDefaultJvmArgs = ['-Xmx2G', '-Xms2G', '-server', '-Dfile.encoding=UTF-8']
}

jar {
    manifest {
        attributes(
                'Main-Class': 'io.questdb.desktop.Main',
                'Build-Timestamp': new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                'Build-Branch': versioning.info.branch,
                'Build-Revision': versioning.info.commit,
                'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})"
        )
    }
}

distributions.main {
    contents {
        from startScripts
    }
}

startScripts {
    startScripts.applicationName = 'start-client'
    doLast {
        def windowsScriptFile = file getWindowsScript()
        def unixScriptFile = file getUnixScript()
        windowsScriptFile.text = windowsScriptFile.text.replace('set APP_HOME=%DIRNAME%..', 'set APP_HOME=%DIRNAME%')
        unixScriptFile.text = unixScriptFile.text.replace('APP_HOME=$( cd "${APP_HOME:-./}.." && pwd -P ) || exit', 'APP_HOME=$(pwd -P) || exit')
    }
}

distZip {
    eachFile { file ->
        if (file.path.contains('bin')) {
            file.exclude()
        }
    }
}

distTar {
    eachFile { file ->
        if (file.path.contains('bin')) {
            file.exclude()
        }
    }
}

test {
    useJUnitPlatform()
}

wrapper {
    gradleVersion = '8.3'
}
